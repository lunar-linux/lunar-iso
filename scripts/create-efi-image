#!/bin/bash

set -e

MNTDIR=$(mktemp -d /tmp/efiboot-XXXXXX)
BOOTIMGFILE="${2:-$ISO_SOURCE/efiboot.img}"

finishScript() {
  umount -d $MNTDIR
  rmdir $MNTDIR
}

trap finishScript 0 2 3 15

if [ ! -d "$(dirname $BOOTIMGFILE)" ]; then
  echo "Missing EFI dir in $ISO_TARGET, previous step failed..."
  exit 1
fi

efiboot_files=("$ISO_TARGET/boot/linux"
	       "$ISO_TARGET/boot/initrd"
	       "$ISO_TARGET/usr/lib/systemd/boot/efi/systemd-bootx64.efi"
	       "$ISO_SOURCE/efiboot/loader")

bootimgsize="$(du -bcs -- "${efiboot_files[@]}" 2> /dev/null | awk 'END { print $1 }')"
bootimgsize=$((bootimgsize+1000000))  # small buffer (~1MB)

truncate -s $bootimgsize $BOOTIMGFILE
mkfs.fat -n LUNAR_EFI $BOOTIMGFILE > /dev/null
mount $BOOTIMGFILE $MNTDIR
mkdir -p "$MNTDIR/EFI/BOOT" "$MNTDIR/lunar/boot" "$MNTDIR/loader/entries"
cp $ISO_TARGET/boot/{linux,initrd} $MNTDIR/lunar/boot/
cp $ISO_TARGET/usr/lib/systemd/boot/efi/systemd-bootx64.efi $MNTDIR/EFI/BOOT/BOOTx64.EFI
cp $ISO_SOURCE/efiboot/loader/loader.conf $MNTDIR/loader/loader.conf
sed -e "s:%VERSION%:${ISO_VERSION}:g" \
    -e "s:%CODENAME%:${ISO_CODENAME}:g" \
    -e "s:%DATE%:${ISO_DATE}:g" \
    -e "s:%LABEL%:LUNAR_${ISO_MAJOR}:g" \
    $ISO_SOURCE/efiboot/loader/entries/lunariso-x86_64-usb.conf > $MNTDIR/loader/entries/lunariso-x86_64.conf
