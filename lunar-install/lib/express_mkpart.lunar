#!/bin/bash

#############################################################
#                                                           #
# Automatically create a basic partition table on a disk    #
#                                                           #
#############################################################
#                                                           #
# Copyright 2023 by Dave Brown                              #
#                                                           #
#############################################################
#                                                           #
# This file is released under the GPLv2                     #
#                                                           #
#############################################################

##########################################################################
# This creates a partition table with the following entries:
#
# 1) A boot/EFI partition at the beginning of the disk, arbitrarily
#    sized at 512M
# 2) A swap partition at the end of the disk, twice the size of RAM, and
# 3) A Linux partition between them taking up the remainder of the disk
#    space.
##########################################################################

express_mkpart() {
    local DISK
    local BOOT_FS
    local PARTNUM
    local PARTPREFIX
    local PARTNAME
    local START
    local FORCE

    DISK=$1
    BOOT_FS=fat32

    case "$DISK" in
        *[0-9])    # if disk name has a number at the end, like "nvme0n1"
            PARTPREFIX="p"
        ;;
        *)
            PARTPREFIX=""
        ;;
    esac

    local BOOTPART_SIZE=512M

    SWAPSIZE=$(awk '
        /^MemTotal:/ {
            memsize=$2

            # Round swap size up a little bit
            base_swapsize = (int(memsize/128000)+1)*128

            # If there is more than 8G of RAM, let swap
            # be memory plus an extra couple of gigabytes
            #
            # Otherwise just let it be twice RAM
            if(memsize > 8388608) {
                print base_swapsize + 2048
            } else {
                print base_swapsize * 2
            }
        }' /proc/meminfo)

    DISKSIZE=$(parted $DISK 'unit mib print devices' |
               grep $DISK |
               sed 's/.*(\(.*\)mib)/\1/i')

    # If swap would be more than 10% disk size, then just use 10% of the
    # disk for swap
    if (( SWAPSIZE > ( DISKSIZE/10) ))
    then
        SWAPSIZE=$((DISKSIZE/10))
    fi

    parted $DISK --script mklabel gpt

    PARTNUM=0
    START=0

    # If this isn't an EFI system, make a bit of room at the start of the disk
    # for grub
    if [ ! -d /sys/firmware/efi ]
    then
        # BIOS boot partition
        ((PARTNUM++))
        START=1MB
        parted $DISK --script "mkpart primary fat32 0 $START"
        parted $DISK --script "set ${PARTNUM} bios_grub on"
        BOOT_FS=ext4
    fi

    # boot/EFI partition
    ((PARTNUM++))
    parted $DISK --script "mkpart primary $BOOT_FS $START $BOOTPART_SIZE"
    parted $DISK --script "set ${PARTNUM} boot on"
    case $BOOT_FS in
        fat32)
            # gparted calls it "fat32", but mkfs wants "vfat", so...
            BOOT_FS=vfat
            FORCE=-F32
        ;;

        *)
            FORCE=-F
        ;;
    esac

    PARTNAME="${DISK}${PARTPREFIX}${PARTNUM}"

    PARTITIONS[${#PARTITIONS[@]}]="${PARTNAME}:/boot:${BOOT_FS}:$(determine_mount_opts ${DISK} ${BOOT_FS}):$(determine_fsck_pass /boot)::${FORCE}:yes"
    BOOT=$PARTNAME
    block_devices use $BOOT

    # Root partition
    ((PARTNUM++))
    PARTNAME="${DISK}${PARTPREFIX}${PARTNUM}"

    parted $DISK --script "mkpart primary ext4 $BOOTPART_SIZE -${SWAPSIZE}M"
    PARTITIONS[${#PARTITIONS[@]}]="${PARTNAME}:/:ext4:$(determine_mount_opts ${DISK} ext4):$(determine_fsck_pass /)::-F:yes"
    ROOT=$PARTNAME
    block_devices use $ROOT

    # Swap partition
    ((PARTNUM++))
    PARTNAME="${DISK}${PARTPREFIX}${PARTNUM}"

    parted $DISK --script "mkpart primary linux-swap -${SWAPSIZE}M 100%"
    PARTITIONS[${#PARTITIONS[@]}]="${PARTNAME}:swap:swap:$(determine_mount_opts ${DISK} swap):$(determine_fsck_pass /)::-f:yes"
    SWAP_ENABLED=1
    S_OK=\\Z2
    block_devices use $PARTNAME

    # Make sure the rest of the installer sees the new partitions
    sync
    partprobe $DISK

    # Now we can skip selecting a swap file (or partition), and we don't
    # have to select partitions either if we don't want to
    DONE_PARTITIONING=1
    L_OK=
    T_OK=
    STEP=6
}
